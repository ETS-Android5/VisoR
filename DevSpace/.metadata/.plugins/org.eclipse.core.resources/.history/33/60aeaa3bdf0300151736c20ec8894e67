package com.visor.screenmesh;

import com.visor.model.DimensionVault;

public class ScreenMesh {
	
	
	//DimensionVault.drawOrder, DimensionVault.triangleVerticesLeft, DimensionVault.textureVerticesLeft;
	
	private float[][] textureXGrid, textureYGrid;
	private float[][] triangleXGrid, triangleYGrid;
	
	
	private short[] drawOrder;
	
	public ScreenMesh(int n, float[] triangleBounds, float textureOffset){
		if(n < 2)
			n = 2;
		
		generateInternalGrid(n, triangleBounds, textureOffset);
	}

	private void generateInternalGrid(int n, float[] triangleBounds, float textureOffset) {
		generateInternalTriangleGrid(n, triangleBounds);
		generateInternalTextureGrid(n, textureOffset);
		generateInternalOrder(n);
	}

	private void generateInternalTextureGrid(int n, float textureOffset) {
		textureXGrid = new float[n][n];
		textureYGrid = new float[n][n];
		
		float leftBound = 0.25f+textureOffset, rightBound = 0.75f+textureOffset;
		float topBound = 0f, bottomBound = 1f;
		
		float dX = (rightBound - leftBound)/(n-1);
		float dY = (bottomBound - topBound)/(n-1);
		
		// y values
		for(int i = 0; i < n; i++){
			float yVal = leftBound + i*dY;
			for(int j = 0; j < n; j++){
				textureYGrid[i][j] = yVal;
			}
		}
		
		// x values
		for(int j = 0; j < n; j++){
			float xVal = rightBound + j*dX;
			for(int i = 0; i < n; i++){
				textureXGrid[i][j] = xVal;
			}
		}
		
		
	}

	private void generateInternalTriangleGrid(int n, float[] triangleBounds) {
		triangleXGrid = new float[n][n];
		textureYGrid = new float[n][n];
		
	}

	private void generateInternalOrder(int n) {
		int totalNumRows = 6*(n-1)*(n-1);
		drawOrder = new short[totalNumRows];
		for(short i = 0; i < totalNumRows; i++){
			drawOrder[i] = i;
		}
	}

	public float[] getTriangleVertices() {
		// TODO Auto-generated method stub
		return generateTriangleVertices();
	}

	public float[] getTextureVertices() {
		// TODO Auto-generated method stub
		return generateTextureVertices();
	}

	public short[] getDrawOrder() {
		// TODO Auto-generated method stub
		return drawOrder;
	}
	
	public 

}
